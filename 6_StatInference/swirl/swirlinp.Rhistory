install.packages("swirl")
library(swirl)
install_from_swirl("Statistical Inference")
swirl()
33/36
deck
52
4/52
0
3*4/52
2/51
1.6*0.8*0.5
0.64
mypdf
mypdf(1.6)
integrate(mypdf,0,1.6)
0.25
2
sqrt(2)
0.997 * 0.001
(1-0.985)*(1-0.001)
(0.997 * 0.001) / ((0.997 * 0.001) +  (1-0.985)*(1-0.001))
3.5
expert_dice
expect_dice
dice_high
expect_dice(dice_high)
expect_dice
expect_dice(dice_low)
(expect_dice(dice_high) + expect_dice(dice_low)) * 0.5
intergrate(myfunc,0,2)
integrate(myfunc,0,2)
spop
mean(spop)
allsam
apply(allsam, 1, mean)
mean(smeans)
dice_sqr
dice_sqr * dice_fair
ex2_fair <- dice_sqr * dice_fair
ex2_fair <- sum(dice_sqr * dice_fair)
sqrt(3.5) - ex_fair
sqrt(3.5) - ex2_fair
ex2_fair - 3.5^2
ex2_high <- sum(dice_sqr * dice_high)
ex2_high <- sum(dice_sqr * dice_high)-edh^2
sum(dice_sqr * dice_high)-edh^2
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
sd(apply(matrix(rpois(10000),1000),1,mean))
sd(apply(matrix(rpois(10000,4),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
choose(5, 3)*.8^3*.2^2
choose(5, 3)*.8^3*.2^2 + choose(5, 4)*.8^4*.2^2 + choose(5, 5)*.8^5*.2^2
choose(5, 3)*.8^3*.2^2 + choose(5, 4)*.8^4*.2^2 + choose(5, 5)*(0.8)^5*(0.2^2)
choose(5, 5)*(0.8)^5*(0.2^0) + choose(5, 4)*(0.8)^4*(0.2^1) + choose(5, 3)*(0.8)^3*(0.2^2)
pbinom(2,5,.8,lower.tail=FALSE)
qnorm(0.1)
0
qnorm(.975, 3, 2)
1.96*6
(1.96*2)+3
pnorm(1200, 1020, 50, lower.tail=FALSe)
pnorm(1200, 1020, 50, lower.tail=FALSE)
pnorm(1200, 1020, 50, lower.tail=FALSE)
pnorm((1200-1020)/50, lower.tail=FALSE)
qnorm(0.75,1020,50)
pnorm(qnorm(.53))
pnorm(qnorm(.53))
ppois(3, 2.5*4,lower.tail=TRUE,log.p=FALSE)
pbinom(5,1000,lower.tail=TRUE,log.p=FALSE)
pbinom(5,1000,0.1,lower.tail=TRUE,log.p=FALSE)
pbinom(5,1000,0.01,lower.tail=TRUE,log.p=FALSE)
ppois(5, 1000*0.01,lower.tail=TRUE,log.p=FALSE)
coinPlot(10)
coinPlot(10000)
qnorm(0.95)
.6 + c(-1,1) * qnorm(.975)*sqrt(.6*.4/100)
binom.test(60,100)$conf.int
mywald(.2)
ACCompar(20)
lamb<-5/94.32
lamb + c(-1,1)*qnorm(.975)*sqrt(lamb/94.32)
poisson.test(5, 94.32)$conf
myplot(2)
myplot(20)
myplot2(2)
qt(.975,df=2)
myplot2(20)
sleep
range(g1)
range(g2)
difference <- g1 - g2
difference <- g2 - g1
mean(difference)
s<-sd(difference)
mn + c(-1,1) * qt(.975,df=9)*s/sqrt(10)
t.test(.975,10)$conf.int
t.test(.975,1000)$conf.int
t.test(.975,x=10)$conf.int
12
t.test(difference)$conf.int
sp <- (8-1)*15.34^2 + (21-1)*18.23^2
ns <- 8+21-2
sp <- sqrt(sp/ns)
132.86-127.44+c(-1,1)*qt(.975,df=ns)*sp*sqrt(1/8+1/21)
var(g1)
sp <- sqrt((9*var(g1)+9*var(g2))/18)
sp <- sqrt((9*var(g1)+9*var(g2))/18)
md + c(-1,1)*qt(.975,18)*sp*sqrt(1/5)
t.test(g2,g1,paired=FALSE)$conf
t.test(g2,g1,paired=FALSE,var.equal=TRUE)$conf
t.test(g2,g1,paired=FALSE)$conf
t.test(g2,g1,paired=TRUE,var.equal=TRUE)$conf
t.test(g2,g1,paired=TRUE)$conf
num <- (15.34^2/8 + 18.23^2/21)^2
den <- 15.34^4/8^2/7 + 18.23^4/21^2/20
mydf <- num/den
132.86-127.44 +c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8 + 18.23^2/21)
10/10
2/1
(32-30)/(10/4)
14
15
qt(.95,df=15)
dim(fs)
t.test(fs$sheight-fs$fheight)
11.7885 * sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
3
8
pt(2.5, 15, lower.tail=FALSE)
qnorm(.95)
qnorm(.99)
22
pnorm(2)
pnorm(2)
pnorm(2,lower.tail=FALSE)
mybin
pbinom(6,size=8,prob=.5,lower.tail=FALSE)
pbinom(7,size=8,prob=.5,lower.tail=TRUE)
ppois(9,5,lower.tail=FALSE)
myplot(34)
myplot(33.3)
myplot(30)
myplot(28)
z <- qnorm(.95)
pnorm(30+z,mean=30,lower.tail=FALSE)
pnorm(30+z,mean=32,lower.tail=FALSE)
pnorm(30+z,mean=32,sd=1,lower.tail=FALSE)
pnorm(30+z,mean=32,sd=2,lower.tail=FALSE)
pnorm(30+z*2,mean=32,sd=2,lower.tail=FALSE)
power.t.test(n = 16, delta = 2 / 4, sd=1, type = "one.sample", alt = "one.sided")$power
power.t.test(n = 16, delta = 2 , sd=4, type = "one.sample", alt = "one.sided")$power
power.t.test(n = 16, delta = 100 , sd=4, type = "one.sample", alt = "one.sided")$power
power.t.test(n = 16, delta = 100 , sd=200, type = "one.sample", alt = "one.sided")$power
power.t.test(power = .8, delta = 2 / 4, sd=1, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, delta = 2 , sd=4, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, delta = 100 , sd=200, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, n=26 , sd=1, type = "one.sample", alt = "one.sided")$delta
power.t.test(power = .8, n=27 , sd=1, type = "one.sample", alt = "one.sided")$delta
head(pValues)
sum(pValues < 0.05)
sum(p.adjust(pValues,method="bonferroni") < 0.05)
sum(p.adjust(pValues,method="BH") < 0.05)
tail(trueStatus)
table(pValues2 < 0.05, trueStatus)
24/500
table(p.adjust(pValues2,method="bonferroni") < 0.05, trueStatus)
table(p.adjust(pValues2,method="BH") < 0.05, trueStatus)
3.5
print(g2)
head(sh)
nh
median(resampledMedians)
median(sh)
sam <- sample(fh,nh*B,replace=TRUE)
resam <- matrix(sam,B,nh)
meds <- apply(resam,1,median)
median(meds)-median(fh) or median(meds)-median(fh)
median(meds)-median(fh)
sd(meds)
sd(resampledMedians)
quantile(resampledMedians,c(.025,.975))
quantile(meds,c(.025,.975))
dim(InsectSprays)
names(InsectSprays)
range(Bdata$count)
range(Cdata$count)

BCcounts
BCcounts
group
testStat
obs <- testStat(BCcounts,group)
obs
mean(Bdata$count)-mean(Cdata$count)
sample(group)
perms <- sapply(1 : 10000, function(i) testStat(BCcounts, sample(group)))
perms > obs
mean(perms>obs)
testStat
testStat(DEcounts,group)
perms <- sapply(1 : 10000, function(i) testStat(DEcounts, sample(group)))

